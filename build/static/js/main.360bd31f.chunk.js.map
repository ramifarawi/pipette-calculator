{"version":3,"sources":["components/ReadOnlyRow.js","components/EditableRow.js","calculator.js","App.js","index.js"],"names":["ReadOnlyRow","contact","handleEditClick","handleDeleteClick","liquid_name","transfer_vol","eight_tips","change_tips","filter_tips","type","onClick","event","id","EditableRow","editFormData","handleEditFormChange","handleCancelClick","console","log","required","placeholder","name","value","onChange","liquid1","this","FindPipette","liquid","tip_cap_300","num_transfers_1000","Math","ceil","floor","num_transfers_300","App","p1000_ctr","p300_ctr","m300_ctr","p20_ctr","m20_ctr","useState","data","contacts","setContacts","addFormData","setAddFormData","setEditFormData","editContactId","setEditContactId","liquidRecommendedPipette","forEach","Number","handleAddFormChange","preventDefault","fieldName","target","getAttribute","fieldValue","newFormData","formValues","contactId","newContacts","index","findIndex","splice","className","onSubmit","editedContact","map","newContact","nanoid","Object","entries","liquidInfo","liquidName","pipetteText","includes","Fragment","pipette_count","max_pip1","keys","reduce","a","b","pip1","max_pip2","protocol_pipettes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.360bd31f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ReadOnlyRow = ({ contact, handleEditClick, handleDeleteClick }) => {\n  return (\n    <tr>\n      <td>{contact.liquid_name}</td>\n      <td>{contact.transfer_vol}</td>\n      <td>{contact.eight_tips}</td>\n      <td>{contact.change_tips}</td>\n      <td>{contact.filter_tips}</td>\n      <td>\n        <button\n          type=\"button\"\n          onClick={(event) => handleEditClick(event, contact)}\n        >\n          Edit\n        </button>\n        <button type=\"button\" onClick={() => handleDeleteClick(contact.id)}>\n          Delete\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default ReadOnlyRow;\n","import React from \"react\";\n\nconst EditableRow = ({\n  editFormData,\n  handleEditFormChange,\n  handleCancelClick,\n}) => {\n  console.log('in editable row')\n  return (\n    <tr>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Liquid name\"\n          name=\"liquid_name\"\n          value={editFormData.liquid_name}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"number\"\n          required=\"required\"\n          placeholder=\"Transfer Volume\"\n          name=\"transfer_vol\"\n          value={editFormData.transfer_vol}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Can use 8 tips/transfer?\"\n          name=\"eight_tips\"\n          value={editFormData.eight_tips}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Change Tips?\"\n          name=\"change_tips\"\n          value={editFormData.change_tips}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <input\n          type=\"text\"\n          required=\"required\"\n          placeholder=\"Filter Tips?\"\n          name=\"filter_tips\"\n          value={editFormData.filter_tips}\n          onChange={handleEditFormChange}\n        ></input>\n      </td>\n      <td>\n        <button type=\"submit\">Save</button>\n        <button type=\"button\" onClick={handleCancelClick}>\n          Cancel\n        </button>\n      </td>\n    </tr>\n  );\n};\n\nexport default EditableRow;\n","class AssignPipette {\n  constructor(transfer_vol, eight_tips, change_tips, filter_tips){\n    this.transfer_vol = transfer_vol;\n    this.eight_tips = eight_tips;\n    this.change_tips = change_tips;\n    this.filter_tips = filter_tips;\n  }\n}\nvar liquid1 = new AssignPipette(600, 'Yes', 'No', 'Yes');\n\nfunction FindPipette(liquid){\n  if (liquid.transfer_vol <= 20) {             // P20 SINGLE CHANNEL PIPETTE\n    if (liquid.eight_tips == 'Yes'){\n      return('P20 Multi-Channel Pipette')\n    }\n    else if (liquid.eight_tips == 'No') {\n      return('P20 Single-Channel Pipette')\n    }\n  }\n\n  else if (liquid.transfer_vol > 20) {    // P300 SINGLE CHANNEL PIPETTE\n\n    if (liquid.transfer_vol < 100) {\n      if (liquid.eight_tips == 'Yes') {\n        return('P300 Multi-Channel Pipette')\n      }\n\n      else if (liquid.eight_tips == 'No'){\n        return('P300 Single-Channel Pipette')\n      }\n    }\n\n    else if (liquid.transfer_vol > 100) {\n      if (liquid.filter_tips == \"Yes\") {\n        var tip_cap_300 = 200\n      }\n      else {\n        var tip_cap_300 = 300\n      }\n\n      // Multi-dispense P1000 vs P300 Multi, also accounts for if P300 multi\n      // has multiple transfers with P1000\n      if (liquid.change_tips == \"No\"\n          && liquid.eight_tips == \"Yes\") {\n            let num_transfers_1000 = Math.ceil(8/Math.floor(1000/liquid.transfer_vol))\n            let num_transfers_300 = Math.ceil(liquid.transfer_vol/tip_cap_300)\n            if (num_transfers_1000 > num_transfers_300){\n              return('P300 Multi-Channel Pipette')\n            }\n            else if (num_transfers_1000 < num_transfers_300){\n              return('P1000 Single-Channel Pipette')\n            }\n            else if (num_transfers_1000 == num_transfers_300){\n              return('P300 Multi-Channel Pipette -OR- P1000 Single-Channel Pipette')\n            }\n      }\n\n      // P300 Single and P1000 for single-dispense\n      if (liquid.change_tips == \"Yes\"\n          && liquid.eight_tips == \"No\") {\n            if (liquid.transfer_vol <= tip_cap_300) {\n          return('P300 Single-Channel or P1000 Single-Channel Pipette')\n        }\n        else {\n          return('P1000 Single-Channel Pipette')\n        }\n      }\n\n\n      // P300 Multi vs P1000 with Multi-Dispense\n      if (liquid.change_tips == \"Yes\"\n          && liquid.eight_tips == \"Yes\") {\n              return('P300 Multi-Channel Pipette')\n            }\n      // P300 Single and P1000 for multi-dispense\n      if (liquid.change_tips == \"No\"\n          && liquid.eight_tips == \"No\") {\n              return('P1000 Single-Channel Pipette')\n      }\n\n      if (liquid.change_tips == \"No\" && liquid.eight_tips == \"Yes\") {\n        let num_transfers_1000 = Math.floor(1000/liquid.transfer_vol)\n        let num_transfers_300 = Math.floor(tip_cap_300/liquid.transfer_vol)\n      }\n    }\n  }\n\n  else {\n    return('P1000 Single-Channel Pipette')\n  }\n\n}\nconsole.log(FindPipette(liquid1))\n// module.exports = {find}\nexport default FindPipette;\n","import React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow.js\";\nimport EditableRow from \"./components/EditableRow.js\";\nimport  FindPipette from \"./calculator\";\n\n\nconst App = () => {\n  var p1000_ctr = 0\n  var p300_ctr = 0\n  var m300_ctr = 0\n  var p20_ctr = 0\n  var m20_ctr = 0\n  var pip\n  var max_pip1\n  var max_pip2\n\n  function protocol_pipettes(){\n    var pipette_count = {'P1000 Single-Channel': p1000_ctr, 'P300 Single-Channel':p300_ctr, 'P300 Multi-Channel':m300_ctr, 'P20 Single-Channel':p20_ctr, 'P20 Multi-Channel':m20_ctr}\n    console.log(pipette_count)\n    if (pipette_count['P20 Single-Channel'] > 0) {\n      var max_pip1 = 'P20 Single-Channel'\n    } else if (pipette_count['P20 Multi-Channel']){\n      var max_pip1 = 'P20 Multi-Channel'\n    } else {\n      var max_pip1 = Object.keys(pipette_count).reduce(\n                      function(a, b){ return pipette_count[a] > pipette_count[b] ? a : b });\n    }\n    let pip1 = max_pip1;\n    delete pipette_count[pip1];\n    if (pipette_count['P20 Single-Channel'] > 0){\n      var max_pip2 = 'P20 Single-Channel'\n    } else if (pipette_count['P20 Multi-Channel']){\n      var max_pip2 = 'P20 Multi-Channel'\n    } else {\n      var max_pip2 = Object.keys(pipette_count).reduce(\n                      function(a, b){ return pipette_count[a] > pipette_count[b] ? a : b });\n    }\n    let pip2 = max_pip2\n    let pipette_rec = [pip1, ', and ', pip2, ' pipette(s)']\n    return pipette_rec;\n  }\n\n\n\n\n\n\n  const [contacts, setContacts] = useState(data);\n\n\n  const [addFormData, setAddFormData] = useState({\n    liquid_name: \"\",\n    transfer_vol: \"\",\n    eight_tips: \"\",\n    change_tips: \"\",\n    filter_tips: \"\",\n  });\n\n  const [editFormData, setEditFormData] = useState({\n    liquid_name: \"\",\n    transfer_vol: \"\",\n    eight_tips: \"\",\n    change_tips: \"\",\n    filter_tips: \"\",\n  });\n\n  const [editContactId, setEditContactId] = useState(null);\n\n  const liquidRecommendedPipette = {}\n  contacts.forEach((contact) => {\n    const castedContact = {\n      ...contact,\n      transfer_vol: Number(contact.transfer_vol),\n    }\n    liquidRecommendedPipette[contact.liquid_name] = FindPipette(contact)\n  })\n  console.log(liquidRecommendedPipette)\n\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      liquid_name: addFormData.liquid_name,\n      transfer_vol: addFormData.transfer_vol,\n      eight_tips: addFormData.eight_tips,\n      change_tips: addFormData.change_tips,\n      filter_tips: addFormData.filter_tips,\n    };\n\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n    const editedContact = {\n      id: editContactId,\n      liquid_name: editFormData.liquid_name,\n      transfer_vol: editFormData.transfer_vol,\n      eight_tips: editFormData.eight_tips,\n      change_tips: editFormData.change_tips,\n      filter_tips: editFormData.filter_tips,\n    };\n\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\n\n    newContacts[index] = editedContact;\n\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n\n    const formValues = {\n      liquid_name: contact.liquid_name,\n      transfer_vol: contact.transfer_vol,\n      eight_tips: contact.eight_tips,\n      change_tips: contact.change_tips,\n      filter_tips: contact.filter_tips,\n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = (contactId) => {\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === contactId);\n\n    newContacts.splice(index, 1);\n\n    setContacts(newContacts);\n  };\n\n\n  return ( <div className=\"app-container\">\n  <form onSubmit={handleEditFormSubmit}>\n    <table>\n      <thead>\n        <tr>\n          <th>Liquid Name</th>\n          <th>Transfer Volume (ul)</th>\n          <th>Number of tips per transfer wholly divisible by 8?</th>\n          <th>Do tips have to be changed (single vs. multi-dispense)?</th>\n          <th>Filter Tips (Y/N)?</th>\n        </tr>\n      </thead>\n      <tbody>\n            {contacts.map((contact) => (\n              <Fragment>\n                {editContactId === contact.id ? (\n                  <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}\n                  />\n                ) : (\n                  <ReadOnlyRow\n                    contact={contact}\n                    handleEditClick={handleEditClick}\n                    handleDeleteClick={handleDeleteClick}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </tbody>\n        </table>\n      </form>\n      <h2>Add a Liquid</h2>\n        <form onSubmit={handleAddFormSubmit}>\n          <input\n            type=\"text\"\n            name=\"liquid_name\"\n            required=\"required\"\n            placeholder=\"Liquid\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"transfer_vol\"\n            required=\"required\"\n            placeholder=\"Transfer Vol (ul)\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"eight_tips\"\n            required=\"required\"\n            placeholder=\"Can use 8 tips/transfer?\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"change_tips\"\n            required=\"required\"\n            placeholder=\"Change tips?\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"filter_tips\"\n            required=\"required\"\n            placeholder=\"Filter Tips?\"\n            onChange={handleAddFormChange}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n\n        {Object.entries(liquidRecommendedPipette).map(liquidInfo => {\n          const liquidName = liquidInfo[0];\n          const pipetteText = liquidInfo[1];\n\n\n          if (pipetteText.includes('P1000')){\n            p1000_ctr += 1\n\n          }\n          if (pipetteText.includes('P300 Multi')){\n            m300_ctr += 1\n\n          }\n          if (pipetteText.includes('P300 Single')){\n            p300_ctr += 1\n\n          }\n          if (pipetteText.includes('P20 Multi')){\n            m20_ctr += 1\n\n          }\n          if (pipetteText.includes('P20 Single')){\n            p20_ctr += 1\n\n          }\n\n\n        return <h3>\n          <form>\n            <table>\n              <thead>\n                <tr>\n                  <th>{liquidName}</th>\n                  <th>Recommended Pipette</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                    <React.Fragment>\n                    <td></td>\n                    <td>{pipetteText}</td>\n                    </React.Fragment>\n                  </tr>\n                  </tbody>\n                </table>\n              </form>\n            </h3>\n\n\n            })}\n\n            <h4>\n              <form>\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Protocol Pipettes: </th>\n                      <th>{protocol_pipettes()}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                        <React.Fragment>\n                        </React.Fragment>\n                      </tr>\n                      </tbody>\n                    </table>\n                  </form>\n                </h4>\n\n        </div>\n      );\n    };\n\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}