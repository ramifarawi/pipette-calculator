{"ast":null,"code":"var _jsxFileName = \"/Users/work/Desktop/pipette-calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow.js\";\nimport EditableRow from \"./components/EditableRow.js\";\nimport FindPipette from \"./calculator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  var p1000_ctr = 0;\n  var p300_ctr = 0;\n  var m300_ctr = 0;\n  var p20_ctr = 0;\n  var m20_ctr = 0;\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    liquid_name: \"\",\n    transfer_vol: \"\",\n    eight_tips: \"\",\n    change_tips: \"\",\n    filter_tips: \"\"\n  });\n  const [editFormData, setEditFormData] = useState({\n    liquid_name: \"\",\n    transfer_vol: \"\",\n    eight_tips: \"\",\n    change_tips: \"\",\n    filter_tips: \"\"\n  });\n  const [editContactId, setEditContactId] = useState(null);\n  const liquidRecommendedPipette = {};\n  contacts.forEach(contact => {\n    const castedContact = { ...contact,\n      transfer_vol: Number(contact.transfer_vol)\n    };\n    liquidRecommendedPipette[contact.liquid_name] = FindPipette(contact);\n  });\n  console.log(liquidRecommendedPipette);\n\n  const handleAddFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...editFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      liquid_name: addFormData.liquid_name,\n      transfer_vol: addFormData.transfer_vol,\n      eight_tips: addFormData.eight_tips,\n      change_tips: addFormData.change_tips,\n      filter_tips: addFormData.filter_tips\n    };\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditFormSubmit = event => {\n    event.preventDefault();\n    const editedContact = {\n      id: editContactId,\n      liquid_name: editFormData.liquid_name,\n      transfer_vol: editFormData.transfer_vol,\n      eight_tips: editFormData.eight_tips,\n      change_tips: editFormData.change_tips,\n      filter_tips: editFormData.filter_tips\n    };\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === editContactId);\n    newContacts[index] = editedContact;\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n    const formValues = {\n      liquid_name: contact.liquid_name,\n      transfer_vol: contact.transfer_vol,\n      eight_tips: contact.eight_tips,\n      change_tips: contact.change_tips,\n      filter_tips: contact.filter_tips\n    };\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = contactId => {\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === contactId);\n    newContacts.splice(index, 1);\n    setContacts(newContacts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEditFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Liquid Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transfer Volume (ul)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Number of tips per transfer wholly divisible by 8?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Do tips have to be changed (single vs. multi-dispense)?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Filter Tips (Y/N)?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: editContactId === contact.id ? /*#__PURE__*/_jsxDEV(EditableRow, {\n              editFormData: editFormData,\n              handleEditFormChange: handleEditFormChange,\n              handleCancelClick: handleCancelClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyRow, {\n              contact: contact,\n              handleEditClick: handleEditClick,\n              handleDeleteClick: handleDeleteClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a Liquid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"liquid_name\",\n        required: \"required\",\n        placeholder: \"Liquid\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"transfer_vol\",\n        required: \"required\",\n        placeholder: \"Transfer Vol (ul)\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"eight_tips\",\n        required: \"required\",\n        placeholder: \"Can use 8 tips/transfer?\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"change_tips\",\n        required: \"required\",\n        placeholder: \"Change tips?\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"filter_tips\",\n        required: \"required\",\n        placeholder: \"Filter Tips?\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 9\n    }, this), Object.entries(liquidRecommendedPipette).map(liquidInfo => {\n      const liquidName = liquidInfo[0];\n      const pipetteText = liquidInfo[1];\n\n      if (pipetteText.includes('P1000')) {\n        p1000_ctr += 1;\n      }\n\n      if (pipetteText.includes('P300 Multi')) {\n        m300_ctr += 1;\n      }\n\n      if (pipetteText.includes('P300 Single')) {\n        p300_ctr += 1;\n      }\n\n      if (pipetteText.includes('P20 Multi')) {\n        m20_ctr += 1;\n      }\n\n      if (pipetteText.includes('P20 Single')) {\n        p20_ctr += 1;\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"table\", {\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: liquidName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Recommended Pipette\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 247,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: pipetteText\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 248,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 16\n      }, this);\n    }), \"var\", /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"blah\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"blah\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: p1000_ctr\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"8gyj/apFjt1tcNfViJtc83feVSg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/work/Desktop/pipette-calculator/src/App.js"],"names":["React","useState","Fragment","nanoid","data","ReadOnlyRow","EditableRow","FindPipette","App","p1000_ctr","p300_ctr","m300_ctr","p20_ctr","m20_ctr","contacts","setContacts","addFormData","setAddFormData","liquid_name","transfer_vol","eight_tips","change_tips","filter_tips","editFormData","setEditFormData","editContactId","setEditContactId","liquidRecommendedPipette","forEach","contact","castedContact","Number","console","log","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","handleEditFormChange","handleAddFormSubmit","newContact","id","newContacts","handleEditFormSubmit","editedContact","index","findIndex","handleEditClick","formValues","handleCancelClick","handleDeleteClick","contactId","splice","map","Object","entries","liquidInfo","liquidName","pipetteText","includes"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow.js\";\nimport EditableRow from \"./components/EditableRow.js\";\nimport  FindPipette from \"./calculator\";\n\n\nconst App = () => {\n  var p1000_ctr = 0\n  var p300_ctr = 0\n  var m300_ctr = 0\n  var p20_ctr = 0\n  var m20_ctr = 0\n  const [contacts, setContacts] = useState(data);\n\n\n  const [addFormData, setAddFormData] = useState({\n    liquid_name: \"\",\n    transfer_vol: \"\",\n    eight_tips: \"\",\n    change_tips: \"\",\n    filter_tips: \"\",\n  });\n\n  const [editFormData, setEditFormData] = useState({\n    liquid_name: \"\",\n    transfer_vol: \"\",\n    eight_tips: \"\",\n    change_tips: \"\",\n    filter_tips: \"\",\n  });\n\n  const [editContactId, setEditContactId] = useState(null);\n\n  const liquidRecommendedPipette = {}\n  contacts.forEach((contact) => {\n    const castedContact = {\n      ...contact,\n      transfer_vol: Number(contact.transfer_vol),\n    }\n    liquidRecommendedPipette[contact.liquid_name] = FindPipette(contact)\n  })\n  console.log(liquidRecommendedPipette)\n\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      liquid_name: addFormData.liquid_name,\n      transfer_vol: addFormData.transfer_vol,\n      eight_tips: addFormData.eight_tips,\n      change_tips: addFormData.change_tips,\n      filter_tips: addFormData.filter_tips,\n    };\n\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n    const editedContact = {\n      id: editContactId,\n      liquid_name: editFormData.liquid_name,\n      transfer_vol: editFormData.transfer_vol,\n      eight_tips: editFormData.eight_tips,\n      change_tips: editFormData.change_tips,\n      filter_tips: editFormData.filter_tips,\n    };\n\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\n\n    newContacts[index] = editedContact;\n\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n\n    const formValues = {\n      liquid_name: contact.liquid_name,\n      transfer_vol: contact.transfer_vol,\n      eight_tips: contact.eight_tips,\n      change_tips: contact.change_tips,\n      filter_tips: contact.filter_tips,\n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = (contactId) => {\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === contactId);\n\n    newContacts.splice(index, 1);\n\n    setContacts(newContacts);\n  };\n\n\n  return ( <div className=\"app-container\">\n  <form onSubmit={handleEditFormSubmit}>\n    <table>\n      <thead>\n        <tr>\n          <th>Liquid Name</th>\n          <th>Transfer Volume (ul)</th>\n          <th>Number of tips per transfer wholly divisible by 8?</th>\n          <th>Do tips have to be changed (single vs. multi-dispense)?</th>\n          <th>Filter Tips (Y/N)?</th>\n        </tr>\n      </thead>\n      <tbody>\n            {contacts.map((contact) => (\n              <Fragment>\n                {editContactId === contact.id ? (\n                  <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}\n                  />\n                ) : (\n                  <ReadOnlyRow\n                    contact={contact}\n                    handleEditClick={handleEditClick}\n                    handleDeleteClick={handleDeleteClick}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </tbody>\n        </table>\n      </form>\n      <h2>Add a Liquid</h2>\n        <form onSubmit={handleAddFormSubmit}>\n          <input\n            type=\"text\"\n            name=\"liquid_name\"\n            required=\"required\"\n            placeholder=\"Liquid\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"transfer_vol\"\n            required=\"required\"\n            placeholder=\"Transfer Vol (ul)\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"eight_tips\"\n            required=\"required\"\n            placeholder=\"Can use 8 tips/transfer?\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"change_tips\"\n            required=\"required\"\n            placeholder=\"Change tips?\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"filter_tips\"\n            required=\"required\"\n            placeholder=\"Filter Tips?\"\n            onChange={handleAddFormChange}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n\n        {Object.entries(liquidRecommendedPipette).map(liquidInfo => {\n          const liquidName = liquidInfo[0];\n          const pipetteText = liquidInfo[1];\n\n\n          if (pipetteText.includes('P1000')){\n            p1000_ctr += 1\n          }\n          if (pipetteText.includes('P300 Multi')){\n            m300_ctr += 1\n          }\n          if (pipetteText.includes('P300 Single')){\n            p300_ctr += 1\n          }\n          if (pipetteText.includes('P20 Multi')){\n            m20_ctr += 1\n          }\n          if (pipetteText.includes('P20 Single')){\n            p20_ctr += 1\n          }\n\n\n        return <h3>\n          <form>\n            <table>\n              <thead>\n                <tr>\n                  <th>{liquidName}</th>\n                  <th>Recommended Pipette</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                    <React.Fragment>\n                    <td></td>\n                    <td>{pipetteText}</td>\n                    </React.Fragment>\n                  </tr>\n                  </tbody>\n                </table>\n              </form>\n            </h3>\n\n\n            })}\n\n            var \n\n            <h4>\n              <form>\n                <table>\n                  <thead>\n                    <tr>\n                      <th>blah</th>\n                      <th>blah</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                        <React.Fragment>\n                        <td></td>\n                        <td>{p1000_ctr}</td>\n                        </React.Fragment>\n                      </tr>\n                      </tbody>\n                    </table>\n                  </form>\n                </h4>\n\n        </div>\n      );\n    };\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}