{"ast":null,"code":"var _jsxFileName = \"/Users/work/Desktop/consumable-calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    liquid_name: '',\n    vol_per_multiplier: '',\n    multiplier: ''\n  });\n  const [editFormData, setEditFormData] = useState({\n    liquid_name: '',\n    vol_per_multiplier: '',\n    multiplier: ''\n  });\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...editFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      liquid_name: addFormData.liquid_name,\n      vol_per_multiplier: addFormData.vol_per_multiplier,\n      multiplier: addFormData.multiplier\n    };\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditFormSubmit = event => {\n    event.preventDefault();\n    const editedContact = {\n      id: editContactId,\n      liquid_name: editFormData.liquid_name,\n      vol_per_multiplier: editFormData.vol_per_multiplier,\n      multiplier: editFormData.multiplier\n    };\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === editContactId);\n    newContacts[index] = editedContact;\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n    const formValues = {\n      liquid_name: contact.liquid_name,\n      vol_per_multiplier: contact.vol_per_multiplier,\n      multiplier: contact.multiplier\n    };\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = contactId => {\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === contactId);\n    newContacts.splice(index, 1);\n    setContacts(newContacts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEditFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Liquid Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Volume per Multiplier\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Multiplier\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: editContactId === contact.id ? /*#__PURE__*/_jsxDEV(EditableRow, {\n              editFormData: editFormData,\n              handleEditFormChange: handleEditFormChange,\n              handleCancelClick: handleCancelClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyRow, {\n              contact: contact,\n              handleEditClick: handleEditClick,\n              handleDeleteClick: handleDeleteClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a Liquid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"liquid_name\",\n        required: \"required\",\n        placeholder: \"Liquid name\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        name: \"vol_per_multiplier\",\n        required: \"required\",\n        placeholder: \"Multiplier\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"multiplier\",\n        required: \"required\",\n        placeholder: \"`Single` or `Multi`\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"Add liquid to table\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 10\n  }, this);\n};\n\n_s(App, \"ntEhKplKyPU7a9pS713KtLy6X5I=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/work/Desktop/consumable-calculator/src/App.js"],"names":["React","useState","Fragment","nanoid","data","ReadOnlyRow","App","contacts","setContacts","addFormData","setAddFormData","liquid_name","vol_per_multiplier","multiplier","editFormData","setEditFormData","editContactId","setEditContactId","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","handleEditFormChange","handleAddFormSubmit","newContact","id","newContacts","handleEditFormSubmit","editedContact","index","findIndex","contact","handleEditClick","formValues","handleCancelClick","handleDeleteClick","contactId","splice","map"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow\";\n\n\nconst App = () => {\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    liquid_name: '',\n    vol_per_multiplier: '',\n    multiplier: ''\n  });\n\n  const [editFormData, setEditFormData] = useState({\n    liquid_name: '',\n    vol_per_multiplier: '',\n    multiplier: ''\n  });\n\n  const [editContactId, setEditContactId] = useState(null);\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      liquid_name: addFormData.liquid_name,\n      vol_per_multiplier: addFormData.vol_per_multiplier,\n      multiplier: addFormData.multiplier,\n    };\n\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n    const editedContact = {\n      id: editContactId,\n      liquid_name: editFormData.liquid_name,\n      vol_per_multiplier: editFormData.vol_per_multiplier,\n      multiplier: editFormData.multiplier,\n    };\n\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\n\n    newContacts[index] = editedContact;\n\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n\n    const formValues = {\n      liquid_name: contact.liquid_name,\n      vol_per_multiplier: contact.vol_per_multiplier,\n      multiplier: contact.multiplier,\n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = (contactId) => {\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === contactId);\n\n    newContacts.splice(index, 1);\n\n    setContacts(newContacts);\n  };\n\n\n  return <div className=\"app-container\">\n  <form onSubmit={handleEditFormSubmit}>\n    <table>\n      <thead>\n        <tr>\n          <th>Liquid Name</th>\n          <th>Volume per Multiplier</th>\n          <th>Multiplier</th>\n        </tr>\n      </thead>\n      <tbody>\n            {contacts.map((contact) => (\n              <Fragment>\n                {editContactId === contact.id ? (\n                  <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}\n                  />\n                ) : (\n                  <ReadOnlyRow\n                    contact={contact}\n                    handleEditClick={handleEditClick}\n                    handleDeleteClick={handleDeleteClick}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </tbody>\n        </table>\n      </form>\n      <h2>Add a Liquid</h2>\n        <form>\n          <input\n            type=\"text\"\n            name=\"liquid_name\"\n            required=\"required\"\n            placeholder=\"Liquid name\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"number\"\n            name=\"vol_per_multiplier\"\n            required=\"required\"\n            placeholder=\"Multiplier\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"multiplier\"\n            required=\"required\"\n            placeholder=\"`Single` or `Multi`\"\n            onChange={handleAddFormChange}\n          />\n          <button type=\"Add liquid to table\">Add</button>\n\n        </form>\n    </div>;\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}