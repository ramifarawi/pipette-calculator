{"ast":null,"code":"class AssignPipette {\n  constructor(transfer_vol, eight_tips, change_tips) {\n    this.transfer_vol = transfer_vol;\n    this.eight_tips = eight_tips;\n    this.change_tips = change_tips;\n    this.filter_tips = filter_tips;\n  }\n\n} // var liquid1 = new AssignPipette(100, 'Yes', 'No');\n\n\nfunction FindPipette(liquid) {\n  let vol = liquid.vol_per_multiplier * liquid.multiplier / 1000;\n\n  if (liquid.transfer_vol <= 20) {\n    if (liquid.eight_tips == 'Yes') {\n      return 'P20 Multi-Channel Pipette';\n    } else {\n      return 'P20 Single-Channel Pipette';\n    }\n  } else if (liquid.transfer_vol >= 20) {\n    if (liquid.transfer_vol <= 100) {\n      if (liquid.eight_tips == 'Yes') {\n        return 'P300 Single-Channel Pipette';\n      } else {\n        return 'P300 Multi-Channel Pipette';\n      }\n    } else {\n      return 'P1000 Single-Channel Pipette';\n    }\n  }\n} // console.log(FindPipette(liquid1.eight_tips));\n// module.exports = {find}\n\n\n_c = FindPipette;\nexport default FindPipette;\n\nvar _c;\n\n$RefreshReg$(_c, \"FindPipette\");","map":{"version":3,"sources":["/Users/work/Desktop/pipette-calculator/src/calculator.js"],"names":["AssignPipette","constructor","transfer_vol","eight_tips","change_tips","filter_tips","FindPipette","liquid","vol","vol_per_multiplier","multiplier"],"mappings":"AAAA,MAAMA,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,YAAD,EAAeC,UAAf,EAA2BC,WAA3B,EAAuC;AAChD,SAAKF,YAAL,GAAoBA,YAApB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACD;;AANiB,C,CAQpB;;;AAGA,SAASC,WAAT,CAAqBC,MAArB,EAA4B;AAC1B,MAAIC,GAAG,GAAGD,MAAM,CAACE,kBAAP,GAA0BF,MAAM,CAACG,UAAjC,GAA4C,IAAtD;;AAEA,MAAIH,MAAM,CAACL,YAAP,IAAuB,EAA3B,EAA8B;AAC5B,QAAIK,MAAM,CAACJ,UAAP,IAAqB,KAAzB,EAA+B;AAC7B,aAAO,2BAAP;AACD,KAFD,MAGK;AACH,aAAO,4BAAP;AACD;AACF,GAPD,MASK,IAAII,MAAM,CAACL,YAAP,IAAuB,EAA3B,EAA+B;AAClC,QAAIK,MAAM,CAACL,YAAP,IAAuB,GAA3B,EAAgC;AAC9B,UAAIK,MAAM,CAACJ,UAAP,IAAqB,KAAzB,EAA+B;AAC7B,eAAO,6BAAP;AACD,OAFD,MAGK;AACH,eAAO,4BAAP;AACD;AACF,KAPD,MASE;AACF,aAAO,8BAAP;AACD;AACF;AACA,C,CACD;AAEA;;;KA7BSG,W;AA8BT,eAAeA,WAAf","sourcesContent":["class AssignPipette {\n  constructor(transfer_vol, eight_tips, change_tips){\n    this.transfer_vol = transfer_vol;\n    this.eight_tips = eight_tips;\n    this.change_tips = change_tips;\n    this.filter_tips = filter_tips;\n  }\n}\n// var liquid1 = new AssignPipette(100, 'Yes', 'No');\n\n\nfunction FindPipette(liquid){\n  let vol = liquid.vol_per_multiplier*liquid.multiplier/1000;\n\n  if (liquid.transfer_vol <= 20){\n    if (liquid.eight_tips == 'Yes'){\n      return('P20 Multi-Channel Pipette')\n    }\n    else {\n      return('P20 Single-Channel Pipette')\n    }\n  }\n\n  else if (liquid.transfer_vol >= 20) {\n    if (liquid.transfer_vol <= 100) {\n      if (liquid.eight_tips == 'Yes'){\n        return('P300 Single-Channel Pipette')\n      }\n      else {\n        return('P300 Multi-Channel Pipette')\n      }\n    }\n\n  else{\n    return('P1000 Single-Channel Pipette')\n  }\n}\n}\n// console.log(FindPipette(liquid1.eight_tips));\n\n// module.exports = {find}\nexport default FindPipette;\n"]},"metadata":{},"sourceType":"module"}