{"ast":null,"code":"class AssignLabware {\n  constructor(vol_per_multiplier, multiplier, single_or_multi) {\n    this.vol_per_multiplier = vol_per_multiplier;\n    this.multiplier = multiplier;\n    this.single_or_multi = single_or_multi; // this.vol = Number(vol_per_multiplier)*Number(multiplier)\n  }\n\n} // console.log(liquid_vol)\n// var liquid1 = new AssignLabware(100, 40, 'Multi');\n\n\nfunction find_labware(liquid) {\n  let vol = liquid.vol_per_multiplier * liquid.multiplier / 1000; // return(vol)\n\n  let single_or_multi = liquid.single_or_multi;\n  let vol_notation = vol > 0.5 ? vol : vol * 1000;\n  let vol_string = ' ~ total volume ' + vol_notation + (vol > 0.5 ? 'mL~' : 'ul~');\n  let left_paren = '(';\n  let right_paren = ')';\n  let well_ceiling_res = 14;\n  let well_ceiling_195mL = 185;\n  let well_ceiling_falcon = 45;\n  let well_ceiling_15mL = 13;\n\n  if (liquid.single_or_multi == 'Multi') {\n    // MULTI-CHANNEL ACCESS\n    if (vol > 4 && vol < 185) {\n      let num_wells = Math.ceil(vol / well_ceiling_res);\n\n      if (vol > 50) {\n        return ' Nest 12 Well Reservoir ' + left_paren + num_wells + ' wells' + right_paren + ', or Nest 1 Well Reservior ' + vol_string;\n      } else {\n        return ' Nest 12 Well Reservoir ' + left_paren + num_wells + ' wells' + right_paren + vol_string;\n      }\n    } else if (vol >= 50) {\n      let labware_count = Math.ceil(vol / well_ceiling);\n      return labware_count + ' Nest 1 Well Reservoirs' + vol_string;\n    } else if (vol <= 4) {\n      return 'Well plate' + vol_string;\n    }\n  }\n\n  if (liquid.single_or_multi == 'Single') {\n    // SINGLE-CHANNEL ACCESS\n    if (vol > 4 && vol < 185) {\n      let num_well_res_12 = Math.ceil(vol / well_ceiling_res);\n      let num_tubes_falcon = Math.ceil(vol / well_ceiling_falcon);\n      let num_tubes_15mL = Math.ceil(vol / well_ceiling_15mL);\n\n      if (vol > 50) {\n        return 'Nest 12 Well Reservoir with ' + num_well_res + ' wells, ' + 'Falcon 50mL tubes with ' + num_tubes_falcon + ' tubes, ' + 'or 15mL tubes with ' + num_tubes_15mL + ' tubes' + vol_string;\n      } else {\n        return ' Nest 12 Well Reservoir ' + left_paren + num_wells + ' wells' + right_paren + vol_string;\n      }\n    } else if (vol < 8) {\n      let num_tubes_1500ul = Math.ceil(vol / 1.4);\n      let num_tubes_2mL = Math.ceil(vol / 1.8);\n      return '(' + num_tubes_1500ul + ')' + ' 1.5mL tubes' + ' || or || ' + '(' + num_tubes_2mL + ')' + ' 2mL tubes' + vol_string;\n    }\n  }\n} // console.log(find_labware(liquid1.vol));\n\n\nmodule.exports = {\n  find_labware\n};","map":{"version":3,"sources":["/Users/work/Desktop/consumable-calculator/src/calculator.js"],"names":["AssignLabware","constructor","vol_per_multiplier","multiplier","single_or_multi","find_labware","liquid","vol","vol_notation","vol_string","left_paren","right_paren","well_ceiling_res","well_ceiling_195mL","well_ceiling_falcon","well_ceiling_15mL","num_wells","Math","ceil","labware_count","well_ceiling","num_well_res_12","num_tubes_falcon","num_tubes_15mL","num_well_res","num_tubes_1500ul","num_tubes_2mL","module","exports"],"mappings":"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","sourcesContent":["class AssignLabware {\n  constructor(vol_per_multiplier, multiplier, single_or_multi){\n    this.vol_per_multiplier = vol_per_multiplier;\n    this.multiplier = multiplier;\n    this.single_or_multi = single_or_multi;\n    // this.vol = Number(vol_per_multiplier)*Number(multiplier)\n  }\n}\n// console.log(liquid_vol)\n// var liquid1 = new AssignLabware(100, 40, 'Multi');\n\nfunction find_labware(liquid){\n  let vol = liquid.vol_per_multiplier*liquid.multiplier/1000;\n  // return(vol)\n  let single_or_multi = liquid.single_or_multi;\n  let vol_notation = (vol > 0.5) ? vol : vol*1000\n  let vol_string = ' ~ total volume ' + vol_notation + ((vol > 0.5) ? 'mL~' : 'ul~')\n  let left_paren = '('\n  let right_paren = ')'\n\n  let well_ceiling_res = 14\n  let well_ceiling_195mL = 185\n  let well_ceiling_falcon = 45\n  let well_ceiling_15mL = 13\n\n  if (liquid.single_or_multi == 'Multi') {   // MULTI-CHANNEL ACCESS\n    if (vol > 4 && vol < 185){\n      let num_wells = Math.ceil(vol/well_ceiling_res);\n      if (vol > 50){\n        return(' Nest 12 Well Reservoir ' +  left_paren + num_wells + ' wells' + right_paren +\n               ', or Nest 1 Well Reservior ' + vol_string)\n      }\n      else {\n        return(' Nest 12 Well Reservoir ' + left_paren + num_wells + ' wells' + right_paren + vol_string);\n      }\n\n    }\n    else if (vol >= 50){\n      let labware_count = Math.ceil(vol/well_ceiling);\n      return(labware_count + ' Nest 1 Well Reservoirs' + vol_string);\n    }\n    else if (vol <= 4) {\n      return( 'Well plate' + vol_string);\n    }\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  if (liquid.single_or_multi == 'Single'){               // SINGLE-CHANNEL ACCESS\n    if (vol > 4 && vol < 185){\n      let num_well_res_12 = Math.ceil(vol/well_ceiling_res);\n      let num_tubes_falcon = Math.ceil(vol/well_ceiling_falcon);\n      let num_tubes_15mL = Math.ceil(vol/well_ceiling_15mL);\n      if (vol > 50){\n        return('Nest 12 Well Reservoir with ' + num_well_res + ' wells, ' +\n               'Falcon 50mL tubes with ' + num_tubes_falcon + ' tubes, ' +\n               'or 15mL tubes with ' + num_tubes_15mL + ' tubes' + vol_string)\n      }\n      else{\n        return(' Nest 12 Well Reservoir ' + left_paren + num_wells + ' wells' + right_paren + vol_string);\n      }\n\n    }\n    else if (vol < 8){\n      let num_tubes_1500ul = Math.ceil(vol/1.4);\n      let num_tubes_2mL = Math.ceil(vol/1.8);\n      return('(' + num_tubes_1500ul + ')' + ' 1.5mL tubes' +\n             ' || or || ' + '(' + num_tubes_2mL + ')' + ' 2mL tubes' + vol_string);\n    }\n  }\n}\n// console.log(find_labware(liquid1.vol));\n\nmodule.exports = {find_labware}\n"]},"metadata":{},"sourceType":"module"}