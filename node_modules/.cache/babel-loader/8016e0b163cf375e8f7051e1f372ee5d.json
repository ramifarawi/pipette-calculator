{"ast":null,"code":"var _jsxFileName = \"/Users/work/Desktop/pipette-calculator/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow.js\";\nimport EditableRow from \"./components/EditableRow.js\";\nimport FindPipette from \"./calculator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  var p1000_ctr = 0;\n  var p300_ctr = 0;\n  var m300_ctr = 0;\n  var p20_ctr = 0;\n  var m20_ctr = 0;\n  var pip;\n  var max_pip1;\n  var max_pip2;\n\n  function protocol_pipettes() {\n    var pipette_count = {\n      'P1000 Single-Channel': p1000_ctr,\n      'P300 Single-Channel': p300_ctr,\n      'P300 Multi-Channel': m300_ctr,\n      'P20 Single-Channel': p20_ctr,\n      'P20 Multi-Channel': m20_ctr\n    };\n    console.log(pipette_count);\n\n    if (pipette_count['P20 Single-Channel'] > 0) {\n      var max_pip1 = 'P20 Single-Channel';\n    } else if (pipette_count['P20 Multi-Channel']) {\n      var max_pip1 = 'P20 Multi-Channel';\n    } else {\n      var max_pip1 = Object.keys(pipette_count).reduce(function (a, b) {\n        return pipette_count[a] > pipette_count[b] ? a : b;\n      });\n    }\n\n    let pip1 = max_pip1;\n    delete pipette_count[pip1];\n\n    if (pipette_count['P20 Single-Channel'] > 0) {\n      var max_pip2 = 'P20 Single-Channel';\n    } else if (pipette_count['P20 Multi-Channel']) {\n      var max_pip2 = 'P20 Multi-Channel';\n    } else {\n      var max_pip2 = Object.keys(pipette_count).reduce(function (a, b) {\n        return pipette_count[a] > pipette_count[b] ? a : b;\n      });\n    }\n\n    let pip2 = max_pip2;\n    let pipette_rec = [pip1, ', and ', pip2, ' pipette(s)'];\n    return pipette_rec;\n  }\n\n  const [contacts, setContacts] = useState(data);\n  const [addFormData, setAddFormData] = useState({\n    liquid_name: \"\",\n    transfer_vol: \"\",\n    eight_tips: \"\",\n    change_tips: \"\",\n    filter_tips: \"\"\n  });\n  const [editFormData, setEditFormData] = useState({\n    liquid_name: \"\",\n    transfer_vol: \"\",\n    eight_tips: \"\",\n    change_tips: \"\",\n    filter_tips: \"\"\n  });\n  const [editContactId, setEditContactId] = useState(null);\n  const liquidRecommendedPipette = {};\n  contacts.forEach(contact => {\n    const castedContact = { ...contact,\n      transfer_vol: Number(contact.transfer_vol)\n    };\n    liquidRecommendedPipette[contact.liquid_name] = FindPipette(contact);\n  });\n  console.log(liquidRecommendedPipette);\n\n  const handleAddFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...addFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = event => {\n    event.preventDefault();\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n    const newFormData = { ...editFormData\n    };\n    newFormData[fieldName] = fieldValue;\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = event => {\n    event.preventDefault();\n    const newContact = {\n      id: nanoid(),\n      liquid_name: addFormData.liquid_name,\n      transfer_vol: addFormData.transfer_vol,\n      eight_tips: addFormData.eight_tips,\n      change_tips: addFormData.change_tips,\n      filter_tips: addFormData.filter_tips\n    };\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditFormSubmit = event => {\n    event.preventDefault();\n    const editedContact = {\n      id: editContactId,\n      liquid_name: editFormData.liquid_name,\n      transfer_vol: editFormData.transfer_vol,\n      eight_tips: editFormData.eight_tips,\n      change_tips: editFormData.change_tips,\n      filter_tips: editFormData.filter_tips\n    };\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === editContactId);\n    newContacts[index] = editedContact;\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n    const formValues = {\n      liquid_name: contact.liquid_name,\n      transfer_vol: contact.transfer_vol,\n      eight_tips: contact.eight_tips,\n      change_tips: contact.change_tips,\n      filter_tips: contact.filter_tips\n    };\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = contactId => {\n    const newContacts = [...contacts];\n    const index = contacts.findIndex(contact => contact.id === contactId);\n    newContacts.splice(index, 1);\n    setContacts(newContacts);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleEditFormSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Liquid Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Transfer Volume (ul)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Number of tips per transfer wholly divisible by 8?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Do tips have to be changed (single vs. multi-dispense)?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Filter Tips (Y/N)?\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: contacts.map(contact => /*#__PURE__*/_jsxDEV(Fragment, {\n            children: editContactId === contact.id ? /*#__PURE__*/_jsxDEV(EditableRow, {\n              editFormData: editFormData,\n              handleEditFormChange: handleEditFormChange,\n              handleCancelClick: handleCancelClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 19\n            }, this) : /*#__PURE__*/_jsxDEV(ReadOnlyRow, {\n              contact: contact,\n              handleEditClick: handleEditClick,\n              handleDeleteClick: handleDeleteClick\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a Liquid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleAddFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"liquid_name\",\n        required: \"required\",\n        placeholder: \"Liquid\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"transfer_vol\",\n        required: \"required\",\n        placeholder: \"Transfer Vol (ul)\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"eight_tips\",\n        required: \"required\",\n        placeholder: \"Can use 8 tips/transfer?\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"change_tips\",\n        required: \"required\",\n        placeholder: \"Change tips?\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"filter_tips\",\n        required: \"required\",\n        placeholder: \"Filter Tips?\",\n        onChange: handleAddFormChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 9\n    }, this), \"return \", /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: liquidName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Recommended Pipette\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 257,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(React.Fragment, {\n                children: [Object.entries(liquidRecommendedPipette).map(liquidInfo => {\n                  const liquidName = liquidInfo[0];\n                  const pipetteText = liquidInfo[1];\n\n                  if (pipetteText.includes('P1000')) {\n                    p1000_ctr += 1;\n                  }\n\n                  if (pipetteText.includes('P300 Multi')) {\n                    m300_ctr += 1;\n                  }\n\n                  if (pipetteText.includes('P300 Single')) {\n                    p300_ctr += 1;\n                  }\n\n                  if (pipetteText.includes('P20 Multi')) {\n                    m20_ctr += 1;\n                  }\n\n                  if (pipetteText.includes('P20 Single')) {\n                    p20_ctr += 1;\n                  }\n                }), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: pipetteText\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 16\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Protocol Pipettes: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: protocol_pipettes()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 175,\n    columnNumber: 12\n  }, this);\n};\n\n_s(App, \"8gyj/apFjt1tcNfViJtc83feVSg=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/work/Desktop/pipette-calculator/src/App.js"],"names":["React","useState","Fragment","nanoid","data","ReadOnlyRow","EditableRow","FindPipette","App","p1000_ctr","p300_ctr","m300_ctr","p20_ctr","m20_ctr","pip","max_pip1","max_pip2","protocol_pipettes","pipette_count","console","log","Object","keys","reduce","a","b","pip1","pip2","pipette_rec","contacts","setContacts","addFormData","setAddFormData","liquid_name","transfer_vol","eight_tips","change_tips","filter_tips","editFormData","setEditFormData","editContactId","setEditContactId","liquidRecommendedPipette","forEach","contact","castedContact","Number","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","handleEditFormChange","handleAddFormSubmit","newContact","id","newContacts","handleEditFormSubmit","editedContact","index","findIndex","handleEditClick","formValues","handleCancelClick","handleDeleteClick","contactId","splice","map","liquidName","entries","liquidInfo","pipetteText","includes"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAO,WAAP;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAOC,WAAP,MAAwB,6BAAxB;AACA,OAAQC,WAAR,MAAyB,cAAzB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,MAAIC,SAAS,GAAG,CAAhB;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,QAAQ,GAAG,CAAf;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,OAAO,GAAG,CAAd;AACA,MAAIC,GAAJ;AACA,MAAIC,QAAJ;AACA,MAAIC,QAAJ;;AAEA,WAASC,iBAAT,GAA4B;AAC1B,QAAIC,aAAa,GAAG;AAAC,8BAAwBT,SAAzB;AAAoC,6BAAsBC,QAA1D;AAAoE,4BAAqBC,QAAzF;AAAmG,4BAAqBC,OAAxH;AAAiI,2BAAoBC;AAArJ,KAApB;AACAM,IAAAA,OAAO,CAACC,GAAR,CAAYF,aAAZ;;AACA,QAAIA,aAAa,CAAC,oBAAD,CAAb,GAAsC,CAA1C,EAA6C;AAC3C,UAAIH,QAAQ,GAAG,oBAAf;AACD,KAFD,MAEO,IAAIG,aAAa,CAAC,mBAAD,CAAjB,EAAuC;AAC5C,UAAIH,QAAQ,GAAG,mBAAf;AACD,KAFM,MAEA;AACL,UAAIA,QAAQ,GAAGM,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,MAA3B,CACC,UAASC,CAAT,EAAYC,CAAZ,EAAc;AAAE,eAAOP,aAAa,CAACM,CAAD,CAAb,GAAmBN,aAAa,CAACO,CAAD,CAAhC,GAAsCD,CAAtC,GAA0CC,CAAjD;AAAoD,OADrE,CAAf;AAED;;AACD,QAAIC,IAAI,GAAGX,QAAX;AACA,WAAOG,aAAa,CAACQ,IAAD,CAApB;;AACA,QAAIR,aAAa,CAAC,oBAAD,CAAb,GAAsC,CAA1C,EAA4C;AAC1C,UAAIF,QAAQ,GAAG,oBAAf;AACD,KAFD,MAEO,IAAIE,aAAa,CAAC,mBAAD,CAAjB,EAAuC;AAC5C,UAAIF,QAAQ,GAAG,mBAAf;AACD,KAFM,MAEA;AACL,UAAIA,QAAQ,GAAGK,MAAM,CAACC,IAAP,CAAYJ,aAAZ,EAA2BK,MAA3B,CACC,UAASC,CAAT,EAAYC,CAAZ,EAAc;AAAE,eAAOP,aAAa,CAACM,CAAD,CAAb,GAAmBN,aAAa,CAACO,CAAD,CAAhC,GAAsCD,CAAtC,GAA0CC,CAAjD;AAAoD,OADrE,CAAf;AAED;;AACD,QAAIE,IAAI,GAAGX,QAAX;AACA,QAAIY,WAAW,GAAG,CAACF,IAAD,EAAO,QAAP,EAAiBC,IAAjB,EAAuB,aAAvB,CAAlB;AACA,WAAOC,WAAP;AACD;;AAOD,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0B7B,QAAQ,CAACG,IAAD,CAAxC;AAGA,QAAM,CAAC2B,WAAD,EAAcC,cAAd,IAAgC/B,QAAQ,CAAC;AAC7CgC,IAAAA,WAAW,EAAE,EADgC;AAE7CC,IAAAA,YAAY,EAAE,EAF+B;AAG7CC,IAAAA,UAAU,EAAE,EAHiC;AAI7CC,IAAAA,WAAW,EAAE,EAJgC;AAK7CC,IAAAA,WAAW,EAAE;AALgC,GAAD,CAA9C;AAQA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCtC,QAAQ,CAAC;AAC/CgC,IAAAA,WAAW,EAAE,EADkC;AAE/CC,IAAAA,YAAY,EAAE,EAFiC;AAG/CC,IAAAA,UAAU,EAAE,EAHmC;AAI/CC,IAAAA,WAAW,EAAE,EAJkC;AAK/CC,IAAAA,WAAW,EAAE;AALkC,GAAD,CAAhD;AAQA,QAAM,CAACG,aAAD,EAAgBC,gBAAhB,IAAoCxC,QAAQ,CAAC,IAAD,CAAlD;AAEA,QAAMyC,wBAAwB,GAAG,EAAjC;AACAb,EAAAA,QAAQ,CAACc,OAAT,CAAkBC,OAAD,IAAa;AAC5B,UAAMC,aAAa,GAAG,EACpB,GAAGD,OADiB;AAEpBV,MAAAA,YAAY,EAAEY,MAAM,CAACF,OAAO,CAACV,YAAT;AAFA,KAAtB;AAIAQ,IAAAA,wBAAwB,CAACE,OAAO,CAACX,WAAT,CAAxB,GAAgD1B,WAAW,CAACqC,OAAD,CAA3D;AACD,GAND;AAOAzB,EAAAA,OAAO,CAACC,GAAR,CAAYsB,wBAAZ;;AAGA,QAAMK,mBAAmB,GAAIC,KAAD,IAAW;AACrCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0B,MAA1B,CAAlB;AACA,UAAMC,UAAU,GAAGL,KAAK,CAACG,MAAN,CAAaG,KAAhC;AAEA,UAAMC,WAAW,GAAG,EAAE,GAAGxB;AAAL,KAApB;AACAwB,IAAAA,WAAW,CAACL,SAAD,CAAX,GAAyBG,UAAzB;AAEArB,IAAAA,cAAc,CAACuB,WAAD,CAAd;AACD,GAVD;;AAYA,QAAMC,oBAAoB,GAAIR,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMC,SAAS,GAAGF,KAAK,CAACG,MAAN,CAAaC,YAAb,CAA0B,MAA1B,CAAlB;AACA,UAAMC,UAAU,GAAGL,KAAK,CAACG,MAAN,CAAaG,KAAhC;AAEA,UAAMC,WAAW,GAAG,EAAE,GAAGjB;AAAL,KAApB;AACAiB,IAAAA,WAAW,CAACL,SAAD,CAAX,GAAyBG,UAAzB;AAEAd,IAAAA,eAAe,CAACgB,WAAD,CAAf;AACD,GAVD;;AAYA,QAAME,mBAAmB,GAAIT,KAAD,IAAW;AACrCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMS,UAAU,GAAG;AACjBC,MAAAA,EAAE,EAAExD,MAAM,EADO;AAEjB8B,MAAAA,WAAW,EAAEF,WAAW,CAACE,WAFR;AAGjBC,MAAAA,YAAY,EAAEH,WAAW,CAACG,YAHT;AAIjBC,MAAAA,UAAU,EAAEJ,WAAW,CAACI,UAJP;AAKjBC,MAAAA,WAAW,EAAEL,WAAW,CAACK,WALR;AAMjBC,MAAAA,WAAW,EAAEN,WAAW,CAACM;AANR,KAAnB;AASA,UAAMuB,WAAW,GAAG,CAAC,GAAG/B,QAAJ,EAAc6B,UAAd,CAApB;AACA5B,IAAAA,WAAW,CAAC8B,WAAD,CAAX;AACD,GAdD;;AAgBA,QAAMC,oBAAoB,GAAIb,KAAD,IAAW;AACtCA,IAAAA,KAAK,CAACC,cAAN;AAEA,UAAMa,aAAa,GAAG;AACpBH,MAAAA,EAAE,EAAEnB,aADgB;AAEpBP,MAAAA,WAAW,EAAEK,YAAY,CAACL,WAFN;AAGpBC,MAAAA,YAAY,EAAEI,YAAY,CAACJ,YAHP;AAIpBC,MAAAA,UAAU,EAAEG,YAAY,CAACH,UAJL;AAKpBC,MAAAA,WAAW,EAAEE,YAAY,CAACF,WALN;AAMpBC,MAAAA,WAAW,EAAEC,YAAY,CAACD;AANN,KAAtB;AASA,UAAMuB,WAAW,GAAG,CAAC,GAAG/B,QAAJ,CAApB;AAEA,UAAMkC,KAAK,GAAGlC,QAAQ,CAACmC,SAAT,CAAoBpB,OAAD,IAAaA,OAAO,CAACe,EAAR,KAAenB,aAA/C,CAAd;AAEAoB,IAAAA,WAAW,CAACG,KAAD,CAAX,GAAqBD,aAArB;AAEAhC,IAAAA,WAAW,CAAC8B,WAAD,CAAX;AACAnB,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GApBD;;AAsBA,QAAMwB,eAAe,GAAG,CAACjB,KAAD,EAAQJ,OAAR,KAAoB;AAC1CI,IAAAA,KAAK,CAACC,cAAN;AACAR,IAAAA,gBAAgB,CAACG,OAAO,CAACe,EAAT,CAAhB;AAEA,UAAMO,UAAU,GAAG;AACjBjC,MAAAA,WAAW,EAAEW,OAAO,CAACX,WADJ;AAEjBC,MAAAA,YAAY,EAAEU,OAAO,CAACV,YAFL;AAGjBC,MAAAA,UAAU,EAAES,OAAO,CAACT,UAHH;AAIjBC,MAAAA,WAAW,EAAEQ,OAAO,CAACR,WAJJ;AAKjBC,MAAAA,WAAW,EAAEO,OAAO,CAACP;AALJ,KAAnB;AAQAE,IAAAA,eAAe,CAAC2B,UAAD,CAAf;AACD,GAbD;;AAeA,QAAMC,iBAAiB,GAAG,MAAM;AAC9B1B,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACD,GAFD;;AAIA,QAAM2B,iBAAiB,GAAIC,SAAD,IAAe;AACvC,UAAMT,WAAW,GAAG,CAAC,GAAG/B,QAAJ,CAApB;AAEA,UAAMkC,KAAK,GAAGlC,QAAQ,CAACmC,SAAT,CAAoBpB,OAAD,IAAaA,OAAO,CAACe,EAAR,KAAeU,SAA/C,CAAd;AAEAT,IAAAA,WAAW,CAACU,MAAZ,CAAmBP,KAAnB,EAA0B,CAA1B;AAEAjC,IAAAA,WAAW,CAAC8B,WAAD,CAAX;AACD,GARD;;AAWA,sBAAS;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,4BACT;AAAM,MAAA,QAAQ,EAAEC,oBAAhB;AAAA,6BACE;AAAA,gCACE;AAAA,iCACE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE;AAAA,oBACOhC,QAAQ,CAAC0C,GAAT,CAAc3B,OAAD,iBACZ,QAAC,QAAD;AAAA,sBACGJ,aAAa,KAAKI,OAAO,CAACe,EAA1B,gBACC,QAAC,WAAD;AACE,cAAA,YAAY,EAAErB,YADhB;AAEE,cAAA,oBAAoB,EAAEkB,oBAFxB;AAGE,cAAA,iBAAiB,EAAEW;AAHrB;AAAA;AAAA;AAAA;AAAA,oBADD,gBAOC,QAAC,WAAD;AACE,cAAA,OAAO,EAAEvB,OADX;AAEE,cAAA,eAAe,EAAEqB,eAFnB;AAGE,cAAA,iBAAiB,EAAEG;AAHrB;AAAA;AAAA;AAAA;AAAA;AARJ;AAAA;AAAA;AAAA;AAAA,kBADD;AADP;AAAA;AAAA;AAAA;AAAA,gBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADS,eAiCL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAjCK,eAkCH;AAAM,MAAA,QAAQ,EAAEX,mBAAhB;AAAA,8BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,QAAQ,EAAC,UAHX;AAIE,QAAA,WAAW,EAAC,QAJd;AAKE,QAAA,QAAQ,EAAEV;AALZ;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,QAAQ,EAAC,UAHX;AAIE,QAAA,WAAW,EAAC,mBAJd;AAKE,QAAA,QAAQ,EAAEA;AALZ;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,YAFP;AAGE,QAAA,QAAQ,EAAC,UAHX;AAIE,QAAA,WAAW,EAAC,0BAJd;AAKE,QAAA,QAAQ,EAAEA;AALZ;AAAA;AAAA;AAAA;AAAA,cAfF,eAsBE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,QAAQ,EAAC,UAHX;AAIE,QAAA,WAAW,EAAC,cAJd;AAKE,QAAA,QAAQ,EAAEA;AALZ;AAAA;AAAA;AAAA;AAAA,cAtBF,eA6BE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,IAAI,EAAC,aAFP;AAGE,QAAA,QAAQ,EAAC,UAHX;AAIE,QAAA,WAAW,EAAC,cAJd;AAKE,QAAA,QAAQ,EAAEA;AALZ;AAAA;AAAA;AAAA;AAAA,cA7BF,eAoCE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAlCG,0BA4EI;AAAA,6BACL;AAAA,+BACE;AAAA,kCACE;AAAA,mCACE;AAAA,sCACE;AAAA,0BAAKyB;AAAL;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAA,mCACE;AAAA,qCACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACCnD,MAAM,CAACoD,OAAP,CAAe/B,wBAAf,EAAyC6B,GAAzC,CAA6CG,UAAU,IAAI;AAC1D,wBAAMF,UAAU,GAAGE,UAAU,CAAC,CAAD,CAA7B;AACA,wBAAMC,WAAW,GAAGD,UAAU,CAAC,CAAD,CAA9B;;AAGA,sBAAIC,WAAW,CAACC,QAAZ,CAAqB,OAArB,CAAJ,EAAkC;AAChCnE,oBAAAA,SAAS,IAAI,CAAb;AAED;;AACD,sBAAIkE,WAAW,CAACC,QAAZ,CAAqB,YAArB,CAAJ,EAAuC;AACrCjE,oBAAAA,QAAQ,IAAI,CAAZ;AAED;;AACD,sBAAIgE,WAAW,CAACC,QAAZ,CAAqB,aAArB,CAAJ,EAAwC;AACtClE,oBAAAA,QAAQ,IAAI,CAAZ;AAED;;AACD,sBAAIiE,WAAW,CAACC,QAAZ,CAAqB,WAArB,CAAJ,EAAsC;AACpC/D,oBAAAA,OAAO,IAAI,CAAX;AAED;;AACD,sBAAI8D,WAAW,CAACC,QAAZ,CAAqB,YAArB,CAAJ,EAAuC;AACrChE,oBAAAA,OAAO,IAAI,CAAX;AAED;AACU,iBAzBZ,CADD,eA2BA;AAAA;AAAA;AAAA;AAAA,wBA3BA,eA4BA;AAAA,4BAAK+D;AAAL;AAAA;AAAA;AAAA;AAAA,wBA5BA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADK;AAAA;AAAA;AAAA;AAAA,YA5EJ,eA8HC;AAAA,6BACE;AAAA,+BACE;AAAA,kCACE;AAAA,mCACE;AAAA,sCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAA,0BAAK1D,iBAAiB;AAAtB;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AAAA,mCACE;AAAA,qCACI,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA9HD;AAAA;AAAA;AAAA;AAAA;AAAA,UAAT;AAmJG,CAxTL;;GAAMT,G;;KAAAA,G;AA2TN,eAAeA,GAAf","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow.js\";\nimport EditableRow from \"./components/EditableRow.js\";\nimport  FindPipette from \"./calculator\";\n\n\nconst App = () => {\n  var p1000_ctr = 0\n  var p300_ctr = 0\n  var m300_ctr = 0\n  var p20_ctr = 0\n  var m20_ctr = 0\n  var pip\n  var max_pip1\n  var max_pip2\n\n  function protocol_pipettes(){\n    var pipette_count = {'P1000 Single-Channel': p1000_ctr, 'P300 Single-Channel':p300_ctr, 'P300 Multi-Channel':m300_ctr, 'P20 Single-Channel':p20_ctr, 'P20 Multi-Channel':m20_ctr}\n    console.log(pipette_count)\n    if (pipette_count['P20 Single-Channel'] > 0) {\n      var max_pip1 = 'P20 Single-Channel'\n    } else if (pipette_count['P20 Multi-Channel']){\n      var max_pip1 = 'P20 Multi-Channel'\n    } else {\n      var max_pip1 = Object.keys(pipette_count).reduce(\n                      function(a, b){ return pipette_count[a] > pipette_count[b] ? a : b });\n    }\n    let pip1 = max_pip1;\n    delete pipette_count[pip1];\n    if (pipette_count['P20 Single-Channel'] > 0){\n      var max_pip2 = 'P20 Single-Channel'\n    } else if (pipette_count['P20 Multi-Channel']){\n      var max_pip2 = 'P20 Multi-Channel'\n    } else {\n      var max_pip2 = Object.keys(pipette_count).reduce(\n                      function(a, b){ return pipette_count[a] > pipette_count[b] ? a : b });\n    }\n    let pip2 = max_pip2\n    let pipette_rec = [pip1, ', and ', pip2, ' pipette(s)']\n    return pipette_rec;\n  }\n\n\n\n\n\n\n  const [contacts, setContacts] = useState(data);\n\n\n  const [addFormData, setAddFormData] = useState({\n    liquid_name: \"\",\n    transfer_vol: \"\",\n    eight_tips: \"\",\n    change_tips: \"\",\n    filter_tips: \"\",\n  });\n\n  const [editFormData, setEditFormData] = useState({\n    liquid_name: \"\",\n    transfer_vol: \"\",\n    eight_tips: \"\",\n    change_tips: \"\",\n    filter_tips: \"\",\n  });\n\n  const [editContactId, setEditContactId] = useState(null);\n\n  const liquidRecommendedPipette = {}\n  contacts.forEach((contact) => {\n    const castedContact = {\n      ...contact,\n      transfer_vol: Number(contact.transfer_vol),\n    }\n    liquidRecommendedPipette[contact.liquid_name] = FindPipette(contact)\n  })\n  console.log(liquidRecommendedPipette)\n\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      liquid_name: addFormData.liquid_name,\n      transfer_vol: addFormData.transfer_vol,\n      eight_tips: addFormData.eight_tips,\n      change_tips: addFormData.change_tips,\n      filter_tips: addFormData.filter_tips,\n    };\n\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n    const editedContact = {\n      id: editContactId,\n      liquid_name: editFormData.liquid_name,\n      transfer_vol: editFormData.transfer_vol,\n      eight_tips: editFormData.eight_tips,\n      change_tips: editFormData.change_tips,\n      filter_tips: editFormData.filter_tips,\n    };\n\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\n\n    newContacts[index] = editedContact;\n\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n\n    const formValues = {\n      liquid_name: contact.liquid_name,\n      transfer_vol: contact.transfer_vol,\n      eight_tips: contact.eight_tips,\n      change_tips: contact.change_tips,\n      filter_tips: contact.filter_tips,\n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = (contactId) => {\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === contactId);\n\n    newContacts.splice(index, 1);\n\n    setContacts(newContacts);\n  };\n\n\n  return ( <div className=\"app-container\">\n  <form onSubmit={handleEditFormSubmit}>\n    <table>\n      <thead>\n        <tr>\n          <th>Liquid Name</th>\n          <th>Transfer Volume (ul)</th>\n          <th>Number of tips per transfer wholly divisible by 8?</th>\n          <th>Do tips have to be changed (single vs. multi-dispense)?</th>\n          <th>Filter Tips (Y/N)?</th>\n        </tr>\n      </thead>\n      <tbody>\n            {contacts.map((contact) => (\n              <Fragment>\n                {editContactId === contact.id ? (\n                  <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}\n                  />\n                ) : (\n                  <ReadOnlyRow\n                    contact={contact}\n                    handleEditClick={handleEditClick}\n                    handleDeleteClick={handleDeleteClick}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </tbody>\n        </table>\n      </form>\n      <h2>Add a Liquid</h2>\n        <form onSubmit={handleAddFormSubmit}>\n          <input\n            type=\"text\"\n            name=\"liquid_name\"\n            required=\"required\"\n            placeholder=\"Liquid\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"transfer_vol\"\n            required=\"required\"\n            placeholder=\"Transfer Vol (ul)\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"eight_tips\"\n            required=\"required\"\n            placeholder=\"Can use 8 tips/transfer?\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"change_tips\"\n            required=\"required\"\n            placeholder=\"Change tips?\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"filter_tips\"\n            required=\"required\"\n            placeholder=\"Filter Tips?\"\n            onChange={handleAddFormChange}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n\n\n\n\n        return <h3>\n          <form>\n            <table>\n              <thead>\n                <tr>\n                  <th>{liquidName}</th>\n                  <th>Recommended Pipette</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                    <React.Fragment>\n                    {Object.entries(liquidRecommendedPipette).map(liquidInfo => {\n                      const liquidName = liquidInfo[0];\n                      const pipetteText = liquidInfo[1];\n\n\n                      if (pipetteText.includes('P1000')){\n                        p1000_ctr += 1\n\n                      }\n                      if (pipetteText.includes('P300 Multi')){\n                        m300_ctr += 1\n\n                      }\n                      if (pipetteText.includes('P300 Single')){\n                        p300_ctr += 1\n\n                      }\n                      if (pipetteText.includes('P20 Multi')){\n                        m20_ctr += 1\n\n                      }\n                      if (pipetteText.includes('P20 Single')){\n                        p20_ctr += 1\n\n                      }\n                                })}\n                    <td></td>\n                    <td>{pipetteText}</td>\n                    </React.Fragment>\n                  </tr>\n                  </tbody>\n                </table>\n              </form>\n            </h3>\n\n\n\n\n            <h4>\n              <form>\n                <table>\n                  <thead>\n                    <tr>\n                      <th>Protocol Pipettes: </th>\n                      <th>{protocol_pipettes()}</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr>\n                        <React.Fragment>\n                        </React.Fragment>\n                      </tr>\n                      </tbody>\n                    </table>\n                  </form>\n                </h4>\n\n        </div>\n      );\n    };\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}