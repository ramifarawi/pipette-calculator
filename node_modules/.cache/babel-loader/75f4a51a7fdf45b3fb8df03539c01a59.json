{"ast":null,"code":"class AssignPipette {\n  constructor(transfer_vol, eight_tips, change_tips, filter_tips) {\n    this.transfer_vol = transfer_vol;\n    this.eight_tips = eight_tips;\n    this.change_tips = change_tips;\n    this.filter_tips = filter_tips;\n  }\n\n} // var liquid1 = new AssignPipette(100, 'Yes', 'No');\n\n\nfunction FindPipette(liquid) {\n  if (liquid.transfer_vol <= 20) {\n    // P20 SINGLE CHANNEL PIPETTE\n    if (liquid.eight_tips == 'Yes') {\n      return 'P20 Multi-Channel Pipette';\n    } else {\n      return 'P20 Single-Channel Pipette';\n    }\n  } else if (liquid.transfer_vol >= 20) {\n    // P300 SINGLE CHANNEL PIPETTE\n    if (liquid.transfer_vol <= 100) {\n      if (liquid.eight_tips == 'Yes') {\n        return 'P300 Multi-Channel Pipette';\n      } else {\n        return 'P300 Single-Channel Pipette';\n      }\n    } else if (liquid.transfer_vol >= 100) {\n      if (liquid.filter_tips == \"Yes\") {\n        var tip_cap_300 = 200;\n      } else {\n        var tip_cap_300 = 300;\n      } // P300 Multi vs P1000 with Multi-Dispense\n\n\n      if (liquid.change_tips == \"Yes\" && liquid.eight_tips == \"Yes\" && liquid.transfer_vol < tip_cap_300) {\n        return 'P1000 Single-Channel Pipette';\n      } // P300 Single and P1000 for single-dispense\n\n\n      if (liquid.change_tips == \"Yes\" && liquid.eight_tips == \"No\" && liquid.transfer_vol < tip_cap_300) {\n        return 'P300 Single-Channel or P1000 Single-Channel Pipette';\n      } // Multi-dispense P1000 vs P300 Multi, also accounts for if P300 multi\n      // has multiple transfers with P1000\n\n\n      if (liquid.change_tips == \"Yes\" && liquid.eight_tips == \"Yes\") {\n        let num_transfers_1000 = 8 / Math.floor(1000 / liquid.transfer_vol);\n        let num_transfers_300 = Math.ceil(liquid.transfer_vol / tip_cap_300);\n\n        if (transfer_vol < 125) {\n          return 'P300 Multi-Channel or P1000 Single-Channel Pipette';\n        } else if (num_transfers_1000 >= num_transfers_300) {\n          return 'P300 Multi-Channel';\n        }\n      }\n\n      if (liquid.change_tips == \"No\" && liquid.eight_tips == \"Yes\") {\n        let num_transfers_1000 = Math.floor(1000 / liquid.transfer_vol);\n        let num_transfers_300 = Math.floor(tip_cap_300 / liquid.transfer_vol);\n      }\n    } else {\n      return 'P1000 Single-Channel Pipette';\n    }\n  }\n} // console.log(FindPipette(liquid1.eight_tips));\n// module.exports = {find}\n\n\n_c = FindPipette;\nexport default FindPipette;\n\nvar _c;\n\n$RefreshReg$(_c, \"FindPipette\");","map":{"version":3,"sources":["/Users/work/Desktop/pipette-calculator/src/calculator.js"],"names":["AssignPipette","constructor","transfer_vol","eight_tips","change_tips","filter_tips","FindPipette","liquid","tip_cap_300","num_transfers_1000","Math","floor","num_transfers_300","ceil"],"mappings":"AAAA,MAAMA,aAAN,CAAoB;AAClBC,EAAAA,WAAW,CAACC,YAAD,EAAeC,UAAf,EAA2BC,WAA3B,EAAwCC,WAAxC,EAAoD;AAC7D,SAAKH,YAAL,GAAoBA,YAApB;AACA,SAAKC,UAAL,GAAkBA,UAAlB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AACD;;AANiB,C,CAQpB;;;AAGA,SAASC,WAAT,CAAqBC,MAArB,EAA4B;AAC1B,MAAIA,MAAM,CAACL,YAAP,IAAuB,EAA3B,EAA+B;AAAc;AAC3C,QAAIK,MAAM,CAACJ,UAAP,IAAqB,KAAzB,EAA+B;AAC7B,aAAO,2BAAP;AACD,KAFD,MAGK;AACH,aAAO,4BAAP;AACD;AACF,GAPD,MAaK,IAAII,MAAM,CAACL,YAAP,IAAuB,EAA3B,EAA+B;AAAK;AAEvC,QAAIK,MAAM,CAACL,YAAP,IAAuB,GAA3B,EAAgC;AAC9B,UAAIK,MAAM,CAACJ,UAAP,IAAqB,KAAzB,EAA+B;AAC7B,eAAO,4BAAP;AACD,OAFD,MAGK;AACH,eAAO,6BAAP;AACD;AACF,KAPD,MAkBK,IAAII,MAAM,CAACL,YAAP,IAAuB,GAA3B,EAAgC;AACnC,UAAIK,MAAM,CAACF,WAAP,IAAsB,KAA1B,EAAiC;AAC/B,YAAIG,WAAW,GAAG,GAAlB;AACD,OAFD,MAGK;AACH,YAAIA,WAAW,GAAG,GAAlB;AACD,OANkC,CASnC;;;AACA,UAAID,MAAM,CAACH,WAAP,IAAsB,KAAtB,IACGG,MAAM,CAACJ,UAAP,IAAqB,KADxB,IAEGI,MAAM,CAACL,YAAP,GAAsBM,WAF7B,EAE0C;AAClC,eAAO,8BAAP;AACP,OAdkC,CAgBnC;;;AACA,UAAID,MAAM,CAACH,WAAP,IAAsB,KAAtB,IACGG,MAAM,CAACJ,UAAP,IAAqB,IADxB,IAEGI,MAAM,CAACL,YAAP,GAAsBM,WAF7B,EAE0C;AACxC,eAAO,qDAAP;AACD,OArBkC,CAuBnC;AACA;;;AACA,UAAID,MAAM,CAACH,WAAP,IAAsB,KAAtB,IACGG,MAAM,CAACJ,UAAP,IAAqB,KAD5B,EACmC;AAC7B,YAAIM,kBAAkB,GAAG,IAAEC,IAAI,CAACC,KAAL,CAAW,OAAKJ,MAAM,CAACL,YAAvB,CAA3B;AACA,YAAIU,iBAAiB,GAAGF,IAAI,CAACG,IAAL,CAAUN,MAAM,CAACL,YAAP,GAAoBM,WAA9B,CAAxB;;AACA,YAAIN,YAAY,GAAG,GAAnB,EAAuB;AACrB,iBAAO,oDAAP;AACD,SAFD,MAGK,IAAIO,kBAAkB,IAAIG,iBAA1B,EAA4C;AAC/C,iBAAO,oBAAP;AACD;AACN;;AAED,UAAIL,MAAM,CAACH,WAAP,IAAsB,IAAtB,IAA8BG,MAAM,CAACJ,UAAP,IAAqB,KAAvD,EAA8D;AAC5D,YAAIM,kBAAkB,GAAGC,IAAI,CAACC,KAAL,CAAW,OAAKJ,MAAM,CAACL,YAAvB,CAAzB;AACA,YAAIU,iBAAiB,GAAGF,IAAI,CAACC,KAAL,CAAWH,WAAW,GAACD,MAAM,CAACL,YAA9B,CAAxB;AACD;AAaF,KArDI,MAsDA;AACL,aAAO,8BAAP;AACD;AAEF;AACA,C,CACD;AAEA;;;KAhGSI,W;AAiGT,eAAeA,WAAf","sourcesContent":["class AssignPipette {\n  constructor(transfer_vol, eight_tips, change_tips, filter_tips){\n    this.transfer_vol = transfer_vol;\n    this.eight_tips = eight_tips;\n    this.change_tips = change_tips;\n    this.filter_tips = filter_tips;\n  }\n}\n// var liquid1 = new AssignPipette(100, 'Yes', 'No');\n\n\nfunction FindPipette(liquid){\n  if (liquid.transfer_vol <= 20) {             // P20 SINGLE CHANNEL PIPETTE\n    if (liquid.eight_tips == 'Yes'){\n      return('P20 Multi-Channel Pipette')\n    }\n    else {\n      return('P20 Single-Channel Pipette')\n    }\n  }\n\n\n\n\n\n  else if (liquid.transfer_vol >= 20) {    // P300 SINGLE CHANNEL PIPETTE\n\n    if (liquid.transfer_vol <= 100) {\n      if (liquid.eight_tips == 'Yes'){\n        return('P300 Multi-Channel Pipette')\n      }\n      else {\n        return('P300 Single-Channel Pipette')\n      }\n    }\n\n\n\n\n\n\n\n\n\n\n    else if (liquid.transfer_vol >= 100) {\n      if (liquid.filter_tips == \"Yes\") {\n        var tip_cap_300 = 200\n      }\n      else {\n        var tip_cap_300 = 300\n      }\n\n\n      // P300 Multi vs P1000 with Multi-Dispense\n      if (liquid.change_tips == \"Yes\"\n          && liquid.eight_tips == \"Yes\"\n          && liquid.transfer_vol < tip_cap_300) {\n              return('P1000 Single-Channel Pipette')\n      }\n\n      // P300 Single and P1000 for single-dispense\n      if (liquid.change_tips == \"Yes\"\n          && liquid.eight_tips == \"No\"\n          && liquid.transfer_vol < tip_cap_300) {\n        return('P300 Single-Channel or P1000 Single-Channel Pipette')\n      }\n\n      // Multi-dispense P1000 vs P300 Multi, also accounts for if P300 multi\n      // has multiple transfers with P1000\n      if (liquid.change_tips == \"Yes\"\n          && liquid.eight_tips == \"Yes\") {\n            let num_transfers_1000 = 8/Math.floor(1000/liquid.transfer_vol)\n            let num_transfers_300 = Math.ceil(liquid.transfer_vol/tip_cap_300)\n            if (transfer_vol < 125){\n              return('P300 Multi-Channel or P1000 Single-Channel Pipette')\n            }\n            else if (num_transfers_1000 >= num_transfers_300){\n              return('P300 Multi-Channel')\n            }\n      }\n\n      if (liquid.change_tips == \"No\" && liquid.eight_tips == \"Yes\") {\n        let num_transfers_1000 = Math.floor(1000/liquid.transfer_vol)\n        let num_transfers_300 = Math.floor(tip_cap_300/liquid.transfer_vol)\n      }\n\n\n\n\n\n\n\n\n\n\n\n\n    }\n    else {\n    return('P1000 Single-Channel Pipette')\n  }\n\n}\n}\n// console.log(FindPipette(liquid1.eight_tips));\n\n// module.exports = {find}\nexport default FindPipette;\n"]},"metadata":{},"sourceType":"module"}