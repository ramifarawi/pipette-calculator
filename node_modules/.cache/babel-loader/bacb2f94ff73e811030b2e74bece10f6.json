{"ast":null,"code":"import _toConsumableArray from\"/Users/work/Desktop/consumable-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _objectSpread from\"/Users/work/Desktop/consumable-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/work/Desktop/consumable-calculator/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,Fragment}from\"react\";import{nanoid}from\"nanoid\";import\"./App.css\";import data from\"./mock-data.json\";import ReadOnlyRow from\"./components/ReadOnlyRow.js\";import EditableRow from\"./components/EditableRow.js\";import Find_labware from\"./calculator\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var App=function App(){var _useState=useState(data),_useState2=_slicedToArray(_useState,2),contacts=_useState2[0],setContacts=_useState2[1];var _useState3=useState({liquid_name:\"\",vol_per_multiplier:\"\",multiplier:\"\",single_or_multi:\"\"}),_useState4=_slicedToArray(_useState3,2),addFormData=_useState4[0],setAddFormData=_useState4[1];var _useState5=useState({liquid_name:\"\",vol_per_multiplier:\"\",multiplier:\"\",single_or_multi:\"\"}),_useState6=_slicedToArray(_useState5,2),editFormData=_useState6[0],setEditFormData=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),editContactId=_useState8[0],setEditContactId=_useState8[1];var liquidRecommendedLabware={};contacts.forEach(function(contact){var castedContact=_objectSpread(_objectSpread({},contact),{},{vol_per_multiplier:Number(contact.vol_per_multiplier),multiplier:Number(contact.multiplier)// vol: Number(multiplier*vol_per_multiplier)\n});liquidRecommendedLabware[contact.liquid_name]=Find_labware(contact);// liquidRecommendedLabware[contact] = total_volume(contact)\n});console.log(liquidRecommendedLabware);var handleAddFormChange=function handleAddFormChange(event){event.preventDefault();var fieldName=event.target.getAttribute(\"name\");var fieldValue=event.target.value;var newFormData=_objectSpread({},addFormData);newFormData[fieldName]=fieldValue;setAddFormData(newFormData);};var handleEditFormChange=function handleEditFormChange(event){event.preventDefault();var fieldName=event.target.getAttribute(\"name\");var fieldValue=event.target.value;var newFormData=_objectSpread({},editFormData);newFormData[fieldName]=fieldValue;setEditFormData(newFormData);};var handleAddFormSubmit=function handleAddFormSubmit(event){event.preventDefault();var newContact={id:nanoid(),liquid_name:addFormData.liquid_name,vol_per_multiplier:addFormData.vol_per_multiplier,multiplier:addFormData.multiplier,single_or_multi:addFormData.single_or_multi};var newContacts=[].concat(_toConsumableArray(contacts),[newContact]);setContacts(newContacts);};var handleEditFormSubmit=function handleEditFormSubmit(event){event.preventDefault();var editedContact={id:editContactId,liquid_name:editFormData.liquid_name,vol_per_multiplier:editFormData.vol_per_multiplier,multiplier:editFormData.multiplier,single_or_multi:editFormData.single_or_multi};var newContacts=_toConsumableArray(contacts);var index=contacts.findIndex(function(contact){return contact.id===editContactId;});newContacts[index]=editedContact;setContacts(newContacts);setEditContactId(null);};var handleEditClick=function handleEditClick(event,contact){event.preventDefault();setEditContactId(contact.id);var formValues={liquid_name:contact.liquid_name,vol_per_multiplier:contact.vol_per_multiplier,multiplier:contact.multiplier,single_or_multi:contact.single_or_multi};setEditFormData(formValues);};var handleCancelClick=function handleCancelClick(){setEditContactId(null);};var handleDeleteClick=function handleDeleteClick(contactId){var newContacts=_toConsumableArray(contacts);var index=contacts.findIndex(function(contact){return contact.id===contactId;});newContacts.splice(index,1);setContacts(newContacts);};return/*#__PURE__*/_jsxs(\"div\",{className:\"app-container\",children:[/*#__PURE__*/_jsx(\"form\",{onSubmit:handleEditFormSubmit,children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Liquid Name\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Volume per Multiplier (ul)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Multiplier (# samples, # washes, etc.)\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Single or Multi-Channel\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:contacts.map(function(contact){return/*#__PURE__*/_jsx(Fragment,{children:editContactId===contact.id?/*#__PURE__*/_jsx(EditableRow,{editFormData:editFormData,handleEditFormChange:handleEditFormChange,handleCancelClick:handleCancelClick}):/*#__PURE__*/_jsx(ReadOnlyRow,{contact:contact,handleEditClick:handleEditClick,handleDeleteClick:handleDeleteClick})});})})]})}),/*#__PURE__*/_jsx(\"h2\",{children:\"Add a Liquid\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleAddFormSubmit,children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"liquid_name\",required:\"required\",placeholder:\"Liquid\",onChange:handleAddFormChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"vol_per_multiplier\",required:\"required\",placeholder:\"Vol Per Multiplier (ul)\",onChange:handleAddFormChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"multiplier\",required:\"required\",placeholder:\"Multiplier\",onChange:handleAddFormChange}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"single_or_multi\",required:\"required\",placeholder:\"`Single` or `Multi`\",onChange:handleAddFormChange}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add\"})]}),Object.entries(liquidRecommendedLabware).map(function(liquidInfo){var liquidName=liquidInfo[0];var volumeText=liquidInfo[1];return/*#__PURE__*/_jsx(\"h3\",{children:/*#__PURE__*/_jsx(\"form\",{children:/*#__PURE__*/_jsxs(\"table\",{children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:liquidName}),/*#__PURE__*/_jsx(\"th\",{children:\"Recommended Labware\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Total Volume\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsxs(React.Fragment,{children:[/*#__PURE__*/_jsx(\"td\",{}),/*#__PURE__*/_jsx(\"td\",{children:volumeText[0]}),/*#__PURE__*/_jsx(\"td\",{children:volumeText[1]})]})})})]})})});}),\";\"]});};export default App;","map":{"version":3,"sources":["/Users/work/Desktop/consumable-calculator/src/App.js"],"names":["React","useState","Fragment","nanoid","data","ReadOnlyRow","EditableRow","Find_labware","App","contacts","setContacts","liquid_name","vol_per_multiplier","multiplier","single_or_multi","addFormData","setAddFormData","editFormData","setEditFormData","editContactId","setEditContactId","liquidRecommendedLabware","forEach","contact","castedContact","Number","console","log","handleAddFormChange","event","preventDefault","fieldName","target","getAttribute","fieldValue","value","newFormData","handleEditFormChange","handleAddFormSubmit","newContact","id","newContacts","handleEditFormSubmit","editedContact","index","findIndex","handleEditClick","formValues","handleCancelClick","handleDeleteClick","contactId","splice","map","Object","entries","liquidInfo","liquidName","volumeText"],"mappings":"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","sourcesContent":["import React, { useState, Fragment } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport \"./App.css\";\nimport data from \"./mock-data.json\";\nimport ReadOnlyRow from \"./components/ReadOnlyRow.js\";\nimport EditableRow from \"./components/EditableRow.js\";\nimport  Find_labware from \"./calculator\";\n\n\nconst App = () => {\n  const [contacts, setContacts] = useState(data);\n\n\n  const [addFormData, setAddFormData] = useState({\n    liquid_name: \"\",\n    vol_per_multiplier: \"\",\n    multiplier: \"\",\n    single_or_multi: \"\",\n  });\n\n  const [editFormData, setEditFormData] = useState({\n    liquid_name: \"\",\n    vol_per_multiplier: \"\",\n    multiplier: \"\",\n    single_or_multi: \"\",\n  });\n\n  const [editContactId, setEditContactId] = useState(null);\n\n  const liquidRecommendedLabware = {}\n  contacts.forEach((contact) => {\n    const castedContact = {\n      ...contact,\n      vol_per_multiplier: Number(contact.vol_per_multiplier),\n      multiplier: Number(contact.multiplier),\n      // vol: Number(multiplier*vol_per_multiplier)\n    }\n    liquidRecommendedLabware[contact.liquid_name] = Find_labware(contact)\n    // liquidRecommendedLabware[contact] = total_volume(contact)\n  })\n  console.log(liquidRecommendedLabware)\n\n\n  const handleAddFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...addFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setAddFormData(newFormData);\n  };\n\n  const handleEditFormChange = (event) => {\n    event.preventDefault();\n\n    const fieldName = event.target.getAttribute(\"name\");\n    const fieldValue = event.target.value;\n\n    const newFormData = { ...editFormData };\n    newFormData[fieldName] = fieldValue;\n\n    setEditFormData(newFormData);\n  };\n\n  const handleAddFormSubmit = (event) => {\n    event.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      liquid_name: addFormData.liquid_name,\n      vol_per_multiplier: addFormData.vol_per_multiplier,\n      multiplier: addFormData.multiplier,\n      single_or_multi: addFormData.single_or_multi,\n    };\n\n    const newContacts = [...contacts, newContact];\n    setContacts(newContacts);\n  };\n\n  const handleEditFormSubmit = (event) => {\n    event.preventDefault();\n\n    const editedContact = {\n      id: editContactId,\n      liquid_name: editFormData.liquid_name,\n      vol_per_multiplier: editFormData.vol_per_multiplier,\n      multiplier: editFormData.multiplier,\n      single_or_multi: editFormData.single_or_multi,\n    };\n\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === editContactId);\n\n    newContacts[index] = editedContact;\n\n    setContacts(newContacts);\n    setEditContactId(null);\n  };\n\n  const handleEditClick = (event, contact) => {\n    event.preventDefault();\n    setEditContactId(contact.id);\n\n    const formValues = {\n      liquid_name: contact.liquid_name,\n      vol_per_multiplier: contact.vol_per_multiplier,\n      multiplier: contact.multiplier,\n      single_or_multi: contact.single_or_multi,\n    };\n\n    setEditFormData(formValues);\n  };\n\n  const handleCancelClick = () => {\n    setEditContactId(null);\n  };\n\n  const handleDeleteClick = (contactId) => {\n    const newContacts = [...contacts];\n\n    const index = contacts.findIndex((contact) => contact.id === contactId);\n\n    newContacts.splice(index, 1);\n\n    setContacts(newContacts);\n  };\n\n\n  return ( <div className=\"app-container\">\n  <form onSubmit={handleEditFormSubmit}>\n    <table>\n      <thead>\n        <tr>\n          <th>Liquid Name</th>\n          <th>Volume per Multiplier (ul)</th>\n          <th>Multiplier (# samples, # washes, etc.)</th>\n          <th>Single or Multi-Channel</th>\n        </tr>\n      </thead>\n      <tbody>\n            {contacts.map((contact) => (\n              <Fragment>\n                {editContactId === contact.id ? (\n                  <EditableRow\n                    editFormData={editFormData}\n                    handleEditFormChange={handleEditFormChange}\n                    handleCancelClick={handleCancelClick}\n                  />\n                ) : (\n                  <ReadOnlyRow\n                    contact={contact}\n                    handleEditClick={handleEditClick}\n                    handleDeleteClick={handleDeleteClick}\n                  />\n                )}\n              </Fragment>\n            ))}\n          </tbody>\n        </table>\n      </form>\n      <h2>Add a Liquid</h2>\n        <form onSubmit={handleAddFormSubmit}>\n          <input\n            type=\"text\"\n            name=\"liquid_name\"\n            required=\"required\"\n            placeholder=\"Liquid\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"vol_per_multiplier\"\n            required=\"required\"\n            placeholder=\"Vol Per Multiplier (ul)\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"multiplier\"\n            required=\"required\"\n            placeholder=\"Multiplier\"\n            onChange={handleAddFormChange}\n          />\n          <input\n            type=\"text\"\n            name=\"single_or_multi\"\n            required=\"required\"\n            placeholder=\"`Single` or `Multi`\"\n            onChange={handleAddFormChange}\n          />\n          <button type=\"submit\">Add</button>\n        </form>\n\n        {Object.entries(liquidRecommendedLabware).map(liquidInfo => {\n          const liquidName = liquidInfo[0];\n          const volumeText = liquidInfo[1];\n\n\n        return <h3>\n          <form>\n            <table>\n              <thead>\n                <tr>\n                  <th>{liquidName}</th>\n                  <th>Recommended Labware</th>\n                  <th>Total Volume</th>\n                </tr>\n              </thead>\n              <tbody>\n                <tr>\n                    <React.Fragment>\n                    <td></td>\n                    <td>{volumeText[0]}</td>\n                    <td>{volumeText[1]}</td>\n                    </React.Fragment>\n                  </tr>\n                  </tbody>\n                </table>\n              </form>\n            </h3>\n            })};\n        </div>\n      );\n    };\n\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}